name: Metaplay CLI Latest Development Build

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-dev:
    runs-on: ubicloud-standard-8

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          show-progress: false

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Clean up old development releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Delete any draft releases
          gh api repos/${{ github.repository }}/releases --paginate | \
            jq '.[] | select(.draft == true) | .id' | \
            xargs -I {} gh api repos/${{ github.repository }}/releases/{} -X DELETE || true

          # Delete any releases named "Development Build" or tagged 0.0.0
          gh api repos/${{ github.repository }}/releases --paginate | \
            jq '.[] | select(.name == "Development Build" or .tag_name == "0.0.0") | .id' | \
            xargs -I {} gh api repos/${{ github.repository }}/releases/{} -X DELETE || true

        # Prevent GoReleaser from picking up any other tag than 0.0.0 for the development build
      - name: Delete all tags locally
        run: |
          git tag -l | xargs -r git tag -d

      - name: Create a new development build tag
        run: |
          git tag 0.0.0
          git push origin 0.0.0 --force

        # Dev builds are not published to distribution channels, only available in Github
      - name: Run GoReleaser (Development Build)
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          distribution: goreleaser
          args: release --config .goreleaser-dev.yaml --clean
