name: Metaplay CLI Build

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubicloud-standard-8

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Tags must be available for GoReleaser, so fetch the full commit history
          show-progress: false # suppress the noisy progress status output

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Fetch tokens from the vault
        id: secrets
        uses: hashicorp/vault-action@v3
        with:
          url: https://vault.int.metaplay.dev:8200
          path: github-actions
          role: ci-read
          method: jwt
          secrets: |
            metaplay/data/ci/metaplaybot-github metaplay_cli_release | METAPLAYBOT_GITHUB_TOKEN;
            metaplay/data/ci/metaplaybot-github chocolatey_api_key | METAPLAYBOT_CHOCO_API_KEY;

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          METAPLAYBOT_GITHUB_TOKEN: ${{ steps.secrets.outputs.METAPLAYBOT_GITHUB_TOKEN }}
        with:
          distribution: goreleaser
          args: release --clean

      # Install NuGet CLI so we can pack the .nuspec into a .nupkg
      - name: Install NuGet CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y nuget

      - name: Pack Chocolatey .nuspec
        run: |
          nuget pack dist/metaplay.choco/metaplay.nuspec -OutputDirectory dist

      # Push the newly built .nupkg to Chocolatey via NuGet
      - name: Push package to Chocolatey
        run: |
          nuget push dist/*.nupkg \
            -Source https://push.chocolatey.org/ \
            -ApiKey "${{ steps.secrets.outputs.METAPLAYBOT_CHOCO_API_KEY }}"

      # Save a copy of the Chocolatey package spec in the `choco-packages` repository
      - name: Archive Chocolatey Artifacts
        env:
          CHOCOPKG_TOKEN: ${{ steps.secrets.outputs.METAPLAYBOT_GITHUB_TOKEN }}
        run: |
          git config user.email "info@metaplay.io"
          git config user.name "MetaplayBot"
          git clone "https://$CHOCOPKG_TOKEN@github.com/metaplay/choco-packages.git"
          cd choco-packages

          # Copy the GoReleaser outputs to choco-packages
          mkdir -p packages/metaplay/cli/
          cp -r ../dist/*.nupkg packages/metaplay/cli/  || true
          cp -r ../dist/metaplay.choco/* packages/metaplay/cli/  || true

          # Stage & commit changes
          git add --all
          if git diff-index --quiet HEAD; then
            echo "No changes to commit."
          else
            git commit -m "Update metaplay choco artifacts for version ${GITHUB_REF##*/}"
            git push origin HEAD
          fi
